<?xml version="1.0" encoding="UTF-8"?>
<!-- The root node for Magento module configuration -->
<config>
    <!-- The module's node contains basic information about each Magento module -->
    <modules>
        <!-- This must exactly match the namespace and module's folder names, with directory separators replaced by underscores -->
        <Swift_Swiftplugin>
            <version>1.2.2</version>
        </Swift_Swiftplugin>
    </modules>
	 <!-- Configure our module's behavior in the frontend scope -->
	 <frontend>
		<routers>
			<swift>
				<use>standard</use>
				<args>
					<module>Swift_Swiftplugin</module>
					<frontName>swift</frontName>
				</args>
			</swift>
		</routers>
		<layout>
			<updates>
				<swift>
					<file>swift.xml</file>
				</swift>
			</updates>
		</layout>
	</frontend>
	<!-- Configure our module's behavior in the admin scope -->
	<admin>
		<routers>
			<swift>
				<use>admin</use>
				<args>
					<module>Swift_Swiftplugin</module>
					<frontName>swift</frontName>
				</args>
			</swift>
		</routers>
	</admin>
	<!-- admin html -->
	<adminhtml>
		<layout>
			<updates>
				<swift>
					<file>swift.xml</file>
				</swift>
			</updates>
		</layout>
		<menu>
			<swift translate="title" module="adminhtml">
				<title>SwiftERM</title>
				<sort_order>100</sort_order>
				<children>
					<set_time>
						<title>Registration</title>
						<action>swift/adminhtml_index</action>
					</set_time>
				</children>
			</swift>
		</menu>
	</adminhtml>
	<global>
		<blocks>
			<swift>
				<class>Swift_Swiftplugin_Block</class>
			</swift>
		</blocks>
		<helpers>
			<swift>
				<class>Swift_Swiftplugin_Helper</class>
			</swift>
        </helpers>
		<models>
			<swift>
				<class>Swift_Swiftplugin_Model</class>
				<resourceModel>swift_mysql4</resourceModel>
			</swift>
			<swift_mysql4>
				<class>Swift_Swiftplugin_Model_Mysql4</class>
				<entities>
					<swift>
						<table>swift_swiftplugin</table>
					</swift>
				</entities>
			</swift_mysql4>
		</models>
		<!-- allow the plugin to read and write -->
		<resources>
			<!-- Sets up database table, when it is first installed this script is ran -->
			<swift_setup>
				<setup>
					<module>Swift_Swiftplugin</module>
				</setup>
			</swift_setup>
			<!-- connection to write -->
			<swift_write>
				<connection>
					<use>core_write</use>
				</connection>
			</swift_write>
			<!-- connection to read -->
			<swift_read>
				<connection>
					<use>core_read</use>
				</connection>
			</swift_read>
		</resources>
		<!-- Set observer methods -->
		  <events>
		  <!-- check out when a product is added to the cart -->
		  <checkout_cart_add_product_complete>
				<observers>
				  <swift>
					<type>singleton</type>
					<class>Swift_Swiftplugin_Model_Observer</class>
					<method>flag_product_added_to_cart</method>
				  </swift>
				</observers>
		  </checkout_cart_add_product_complete>
		  <!-- check out when a user has subscribed -->
			<newsletter_subscriber_save_after>
				<observers>
				  <swift>
					<type>singleton</type>
					<class>Swift_Swiftplugin_Model_Observer</class>
					<method>flag_subscribe_to_newsletter</method>
				  </swift>
				</observers>
			</newsletter_subscriber_save_after>
			<!-- check out when an order has been made -->
			 <checkout_submit_all_after>
                <observers>
                    <swift>
                        <type>singleton</type>
                        <class>Swift_Swiftplugin_Model_Observer</class>
                        <method>flag_product_order_success</method>
                    </swift>
                </observers>
            </checkout_submit_all_after>
			<sales_order_place_after>
				<observers>
                    <swift>
                        <type>singleton</type>
                        <class>Swift_Swiftplugin_Model_Observer</class>
                        <method>flag_product_order_success</method>
                    </swift>
                </observers>
			</sales_order_place_after>
		</events>
	</global>
</config>